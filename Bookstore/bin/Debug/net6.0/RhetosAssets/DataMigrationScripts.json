{
  "Scripts": [
    {
      "Tag": "533F534B-388C-4CE1-B8AE-A308542471F5",
      "Path": "Rhetos.CommonConcepts\\0.9.12\\1 - AppliedConcept Options1 Options2.sql",
      "Content": "/*DATAMIGRATION 533F534B-388C-4CE1-B8AE-A308542471F5*/\r\n\r\n-- This script updates all properties' metadata to the new version, in order to avoid dropping and creating all the related columns.\r\n\r\nUPDATE\r\n\tRhetos.AppliedConcept\r\nSET\r\n\tCreateQuery = STUFF(CreateQuery, CHARINDEX(\r\n\t\t';' + CHAR(13) + CHAR(10) + 'EXEC Rhetos.DataMigrationApply',\r\n\t\tCreateQuery), 0, ' /*' + REPLACE(ConceptInfoKey, ' ', ' Options1 ') + '*/ /*' + REPLACE(ConceptInfoKey, ' ', ' Options2 ') + '*/')\r\nWHERE\r\n\tConceptInfoKey LIKE 'PropertyInfo %'\r\n\tAND CreateQuery LIKE 'ALTER TABLE % ADD %;' + CHAR(13) + CHAR(10) + 'EXEC Rhetos.DataMigrationApply %;'\r\n\tAND CreateQuery NOT LIKE '%PropertyInfo Options1%';\r\n",
      "Down": null
    },
    {
      "Tag": "323D7F48-433F-49E9-983B-09A4B7317077",
      "Path": "Rhetos.CommonConcepts\\0.9.14\\1 - Claim.Active.sql",
      "Content": "/*DATAMIGRATION 323D7F48-433F-49E9-983B-09A4B7317077*/ -- Change this code only if the script needs to be executed again.\r\n\r\n--EXEC Rhetos.HelpDataMigration 'Common', 'Claim'\r\nEXEC Rhetos.DataMigrationUse 'Common', 'Claim', 'ID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'Claim', 'Active', 'bit';\r\nGO\r\n\r\nUPDATE _Common.Claim SET Active = 1 WHERE Active IS NULL;\r\n\r\nEXEC Rhetos.DataMigrationApplyMultiple 'Common', 'Claim', 'ID, Active';\r\n",
      "Down": null
    },
    {
      "Tag": "0D99CDE7-E4CB-4FBF-937B-4ADEEEBC46CE",
      "Path": "Rhetos.CommonConcepts\\0.9.29\\1 - RoleInheritsRole renames columns.sql",
      "Content": "/*DATAMIGRATION 0D99CDE7-E4CB-4FBF-937B-4ADEEEBC46CE*/ -- Change the script's code only if the it needs to be executed again.\r\n\r\n-- The following lines are generated by: EXEC Rhetos.HelpDataMigration 'Common', 'RoleInheritsRole';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'RoleInheritsRole', 'ID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'RoleInheritsRole', 'DerivedID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'RoleInheritsRole', 'InheritsFromID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'RoleInheritsRole', 'UsersFromID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'RoleInheritsRole', 'PermissionsFromID', 'uniqueidentifier';\r\nGO\r\n\r\n-- ... write the data migration queries here (don't forget to use the underscore '_' in schema name) ...\r\n\r\nUPDATE\r\n\t_Common.RoleInheritsRole\r\nSET\r\n\tUsersFromID = DerivedID,\r\n\tPermissionsFromID = InheritsFromID\r\nWHERE\r\n\tUsersFromID IS NULL AND PermissionsFromID IS NULL;\r\n\r\nEXEC Rhetos.DataMigrationApplyMultiple 'Common', 'RoleInheritsRole', 'ID, UsersFromID, PermissionsFromID';\r\n",
      "Down": null
    },
    {
      "Tag": "33EA1F9E-1A89-4CF0-9AD3-A8E10BEF2D3C",
      "Path": "Rhetos.CommonConcepts\\0.9.29\\2 - Permissions to RP and PP.sql",
      "Content": "/*DATAMIGRATION 33EA1F9E-1A89-4CF0-9AD3-A8E10BEF2D3C*/ -- Change the script's code only if the it needs to be executed again.\r\n\r\nEXEC Rhetos.DataMigrationUse 'Common', 'Permission', 'ID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'Permission', 'RoleID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'Permission', 'PrincipalID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'Permission', 'ClaimID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'Permission', 'IsAuthorized', 'bit';\r\n-- The following lines are generated by: EXEC Rhetos.HelpDataMigration 'Common', 'RolePermission';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'RolePermission', 'ID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'RolePermission', 'RoleID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'RolePermission', 'ClaimID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'RolePermission', 'IsAuthorized', 'bit';\r\n-- The following lines are generated by: EXEC Rhetos.HelpDataMigration 'Common', 'PrincipalPermission';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'PrincipalPermission', 'ID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'PrincipalPermission', 'PrincipalID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'PrincipalPermission', 'ClaimID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'PrincipalPermission', 'IsAuthorized', 'bit';\r\nGO\r\n\r\nIF NOT EXISTS (SELECT * FROM _Common.RolePermission) AND NOT EXISTS (SELECT * FROM _Common.PrincipalPermission)\r\nBEGIN\r\n\tINSERT INTO\r\n\t\t_Common.RolePermission (ID, RoleID, ClaimID, IsAuthorized)\r\n\tSELECT\r\n\t\tID, RoleID, ClaimID, IsAuthorized\r\n\tFROM\r\n\t\t_Common.Permission p\r\n\tWHERE\r\n\t\tp.RoleID IS NOT NULL\r\n\t\r\n\tINSERT INTO\r\n\t\t_Common.PrincipalPermission (ID, PrincipalID, ClaimID, IsAuthorized)\r\n\tSELECT\r\n\t\tID, PrincipalID, ClaimID, IsAuthorized\r\n\tFROM\r\n\t\t_Common.Permission p\r\n\tWHERE\r\n\t\tp.PrincipalID IS NOT NULL\r\nEND;\r\n\r\nEXEC Rhetos.DataMigrationApplyMultiple 'Common', 'RolePermission', 'ID, RoleID, ClaimID, IsAuthorized';\r\nEXEC Rhetos.DataMigrationApplyMultiple 'Common', 'PrincipalPermission', 'ID, PrincipalID, ClaimID, IsAuthorized';\r\n",
      "Down": null
    },
    {
      "Tag": "E2B91BB7-FED3-45DB-AFB1-61CEF615C2C3",
      "Path": "Rhetos.CommonConcepts\\0.9.35\\1 - A new tag in create property.sql",
      "Content": "/*DATAMIGRATION E2B91BB7-FED3-45DB-AFB1-61CEF615C2C3*/\r\n\r\nUPDATE\r\n\tRhetos.AppliedConcept\r\nSET\r\n\tCreateQuery = CreateQuery + CHAR(13) + CHAR(10) + '/*PropertyInfo AfterCreate ' + SUBSTRING(ConceptInfoKey, 14, 256) + '*/'\r\nWHERE\r\n\tConceptInfoKey LIKE 'PropertyInfo %'\r\n\tAND CreateQuery LIKE '%ALTER TABLE%DataMigrationApply%'\r\n\tAND CreateQuery NOT LIKE '%/*PropertyInfo AfterCreate ' + SUBSTRING(ConceptInfoKey, 14, 256) + '*/%'\r\n",
      "Down": null
    },
    {
      "Tag": "B3D3CD35-D41F-4E70-A490-94CBD12226FF",
      "Path": "Rhetos.CommonConcepts\\1.3\\1 - Clear excess dependencies for subtype id.sql",
      "Content": "/*DATAMIGRATION B3D3CD35-D41F-4E70-A490-94CBD12226FF*/\r\n\r\nDELETE\r\n\tacdo\r\nFROM\r\n    Rhetos.AppliedConceptDependsOn acdo\r\n    INNER JOIN Rhetos.AppliedConcept acDependent ON acDependent.ID = acdo.DependentID\r\n    INNER JOIN Rhetos.AppliedConcept acDependsOn ON acDependsOn.ID = acdo.DependsOnID\r\nWHERE\r\n    acDependent.ConceptInfoKey like 'SqlObjectInfo %'\r\n    and acDependent.CreateQuery like 'ALTER TABLE%BINARY(4)%PERSISTED NOT NULL%'\r\n    and (acDependsOn.ConceptInfoKey not like 'DataStructureInfo %' and acDependsOn.ConceptInfoKey not like 'ModuleInfo %')\r\n",
      "Down": null
    },
    {
      "Tag": "0246E7EA-F2F2-419B-9710-1149838E8604",
      "Path": "Rhetos.CommonConcepts\\1.11\\1 - DataStructureExtendsInfo to UniqueReferenceInfo.sql",
      "Content": "/*DATAMIGRATION 0246E7EA-F2F2-419B-9710-1149838E8604*/ -- Change the script's code only if it needs to be executed again.\r\n\r\n-- Updating existing database metadata to avoid regeneration of all database objects.\r\n-- The concept's key and implementation is changed from DataStructureExtends* to UniqueReference*,\r\n-- but the implementation of the existing database objects did not change.\r\n\r\nUPDATE\r\n    Rhetos.AppliedConcept\r\nSET\r\n    ConceptInfoKey = REPLACE(ConceptInfoKey, 'DataStructureExtends', 'UniqueReference'),\r\n    ImplementationType = REPLACE(ImplementationType, 'DataStructureExtends', 'UniqueReference'),\r\n    CreateQuery = REPLACE(CreateQuery, 'DataStructureExtends', 'UniqueReference')\r\nWHERE\r\n    ConceptInfoKey LIKE 'DataStructureExtendsInfo %'\r\n",
      "Down": null
    },
    {
      "Tag": "BD03D06C-2EC3-4322-B46F-A88EEFB88572",
      "Path": "Rhetos.CommonConcepts\\2.4\\1 - KeepSynchronizedMetadata for Polymorphic.sql",
      "Content": "/*DATAMIGRATION BD03D06C-2EC3-4322-B46F-A88EEFB88572*/ -- Change the script's code only if it needs to be executed again.\r\n\r\n-- The following lines are generated by: EXEC Rhetos.HelpDataMigration 'Common', 'KeepSynchronizedMetadata';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'KeepSynchronizedMetadata', 'ID', 'uniqueidentifier';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'KeepSynchronizedMetadata', 'Target', 'nvarchar(256)';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'KeepSynchronizedMetadata', 'Source', 'nvarchar(256)';\r\nEXEC Rhetos.DataMigrationUse 'Common', 'KeepSynchronizedMetadata', 'Context', 'nvarchar(MAX)';\r\nGO\r\n\r\n-- The change in Rhetos infrastructure should not result with an automatic update of the existing data on deploy\r\n-- (that might even result with a deployment failure in some cases).\r\n-- If there are any old computed records that where out-of-sync,\r\n-- the admin should compare Source and Target records after the upgrade.\r\nUPDATE\r\n\t_Common.KeepSynchronizedMetadata\r\nSET\r\n\tContext = 'NORECOMPUTE'\r\nWHERE\r\n\tTarget LIKE '%[_]Materialized'\r\n\tAND Context = 'Rhetos.Dsl.DefaultConcepts.PolymorphicInfo ' + Source\r\n\r\nEXEC Rhetos.DataMigrationApplyMultiple 'Common', 'KeepSynchronizedMetadata', 'ID, Target, Source, Context';\r\n",
      "Down": null
    },
    {
      "Tag": "F0F1C9B6-058D-41DF-8514-DF9D7BD2D701",
      "Path": "Rhetos.CommonConcepts\\2.12\\1 - Optimized index CreateQuery modification.sql",
      "Content": "/*DATAMIGRATION F0F1C9B6-058D-41DF-8514-DF9D7BD2D701*/ -- Change the script's code only if it needs to be executed again.\r\n\r\n/*\r\nThis data-migration script manually adds a new option in the CreateQuery for indexes.\r\nThis will prevent Rhetos from automatically changing CreateQuery to the new version,\r\nin order to avoid re-creating the indexes that might take long time on large databases.\r\n*/\r\n\r\nSELECT\r\n    NewCreateQuery = CASE WHEN CHARINDEX('CLUSTERED ' + Tag1, CreateQuery) <> 0\r\n        THEN REPLACE(CreateQuery, 'CLUSTERED ' + Tag1, Tag0 + ' CLUSTERED ' + Tag1)\r\n        ELSE REPLACE(CreateQuery, Tag1, Tag0 + ' ' + Tag1)\r\n        END,\r\n    *\r\nINTO #updates\r\nFROM\r\n    (\r\n        SELECT\r\n            Tag0 = '/*SqlIndexMultipleInfo Options0 ' + KeyProperties + '*/',\r\n            Tag1 = '/*SqlIndexMultipleInfo Options1 ' + KeyProperties + '*/',\r\n            *\r\n        FROM\r\n            (\r\n                SELECT\r\n                    ID,\r\n                    CreateQuery,\r\n                    KeyProperties = SUBSTRING(ConceptInfoKey, 22, LEN(ConceptInfoKey))\r\n                FROM\r\n                    Rhetos.AppliedConcept\r\n                WHERE\r\n                    ConceptInfoKey LIKE 'SqlIndexMultipleInfo %'\r\n            ) x\r\n    ) x\r\nWHERE\r\n    CreateQuery NOT LIKE '%' + Tag0 + '%'\r\n\r\nUPDATE\r\n    ac\r\nSET\r\n    CreateQuery = #updates.NewCreateQuery\r\nFROM\r\n    Rhetos.AppliedConcept ac\r\n    INNER JOIN #updates ON #updates.ID = ac.ID;\r\n\r\nUPDATE\r\n    Rhetos.AppliedConcept\r\nSET\r\n    InfoType = REPLACE(InfoType, 'UniqueMultiplePropertiesInfo', 'SqlIndexMultipleInfo'),\r\n    SerializedInfo = REPLACE(SerializedInfo, 'UniqueMultiplePropertiesInfo', 'SqlIndexMultipleInfo')\r\nWHERE\r\n    ImplementationType LIKE 'Rhetos.DatabaseGenerator.DefaultConcepts.SqlIndexMultipleDatabaseDefinition%';\r\n\r\nDELETE\r\n    d\r\nFROM\r\n    Rhetos.AppliedConceptDependsOn d\r\n    INNER JOIN Rhetos.AppliedConcept c ON c.ID = d.DependsOnID\r\nWHERE\r\n    c.InfoType LIKE 'Rhetos.Dsl.DefaultConcepts.UniqueMultiplePropertiesInfo%'\r\n    and c.CreateQuery = '';\r\n",
      "Down": null
    },
    {
      "Tag": "654F5AA3-4DB4-4C3A-8AF7-52CA3BBC5E2C",
      "Path": "Rhetos.CommonConcepts\\2.12\\2 - Separate foreign key concept.sql",
      "Content": "/*DATAMIGRATION 654F5AA3-4DB4-4C3A-8AF7-52CA3BBC5E2C*/ -- Change the script's code only if it needs to be executed again.\r\n\r\n/*\r\nUpdating FK constraint metadata to match the new version of ReferencePropertyConstraintDatabaseDefinition,\r\nin order to avoid unnecessary changes in database structure during deployment.\r\n*/\r\n\r\nUPDATE\r\n    Rhetos.AppliedConcept\r\nSET\r\n    InfoType = 'Rhetos.Dsl.DefaultConcepts.ReferencePropertyDbConstraintInfo, Rhetos.Dsl.DefaultConcepts, Version=2.12.0.0, Culture=neutral, PublicKeyToken=null',\r\n    ConceptInfoKey = REPLACE(ConceptInfoKey, 'PropertyInfo ', 'ReferencePropertyDbConstraintInfo '),\r\n    CreateQuery = REPLACE(CreateQuery, '/*ReferencePropertyInfo FK options', '/*ReferencePropertyDbConstraintInfo FK options')\r\nWHERE\r\n    ImplementationType LIKE 'Rhetos.DatabaseGenerator.DefaultConcepts.ReferencePropertyConstraintDatabaseDefinition%';\r\n\r\nDELETE d\r\nFROM\r\n    Rhetos.AppliedConceptDependsOn d\r\n    INNER JOIN Rhetos.AppliedConcept c ON c.ID = d.DependsOnID\r\nWHERE\r\n    c.ImplementationType LIKE 'Rhetos.DatabaseGenerator.DefaultConcepts.ReferencePropertyConstraintDatabaseDefinition%';\r\n",
      "Down": null
    },
    {
      "Tag": "191DE223-880F-40E8-9D14-75883886B6E1",
      "Path": "Rhetos.CommonConcepts\\4.3\\1 - Set schema authorization to dbo.sql",
      "Content": "/*DATAMIGRATION 191DE223-880F-40E8-9D14-75883886B6E1*/ -- Change the script's code only if it needs to be executed again.\r\n\r\nSELECT\r\n    SchemaName = SUBSTRING(ConceptInfoKey, 12, 256)\r\nINTO\r\n    #RhetosSchemas\r\nFROM\r\n    Rhetos.AppliedConcept\r\nWHERE\r\n    CreateQuery LIKE 'CREATE SCHEMA %'\r\n    AND ConceptInfoKey LIKE 'ModuleInfo %';\r\n\r\nDECLARE @sql nvarchar(max) = '';\r\n\r\nSELECT\r\n    @sql = @sql + 'ALTER AUTHORIZATION ON SCHEMA::[' + name + '] TO dbo;\r\n'\r\nFROM\r\n    sys.schemas\r\nWHERE\r\n    (\r\n        name IN (SELECT SchemaName FROM #RhetosSchemas)\r\n        OR name IN (SELECT '_' + SchemaName FROM #RhetosSchemas)\r\n    )\r\n    AND principal_id <> USER_ID('dbo');\r\n\r\nPRINT @sql;\r\nEXEC sp_executesql @sql;\r\n\r\nDROP TABLE #RhetosSchemas;\r\n",
      "Down": null
    },
    {
      "Tag": "366824BC-4E2F-4025-97CE-6C892A00C5DA",
      "Path": "Rhetos.CommonConcepts\\4.3\\2 - Clustered PK on migration tables.sql",
      "Content": "/*DATAMIGRATION 366824BC-4E2F-4025-97CE-6C892A00C5DA*/ -- Change the script's code only if it needs to be executed again.\r\n\r\nDECLARE @sql nvarchar(max) = '';\r\n\r\nSELECT\r\n    @sql = @sql +\r\n        'ALTER TABLE ' + QUOTENAME(s.name) + '.' + QUOTENAME(t.name) + ' DROP CONSTRAINT ' + QUOTENAME(pkIndex.name) + ';' + CHAR(13) + CHAR(10) +\r\n        'ALTER TABLE ' + QUOTENAME(s.name) + '.' + QUOTENAME(t.name) + ' ADD CONSTRAINT ' + QUOTENAME(pkIndex.name) + ' PRIMARY KEY CLUSTERED (ID);' + CHAR(13) + CHAR(10)\r\nFROM\r\n    sys.tables t\r\n    INNER JOIN sys.schemas s ON s.schema_id = t.schema_id\r\n    LEFT JOIN sys.indexes clusteredIndex\r\n        ON clusteredIndex.object_id = t.object_id\r\n        AND clusteredIndex.type_desc = 'CLUSTERED'\r\n    INNER JOIN sys.indexes pkIndex\r\n        ON pkIndex.object_id = t.object_id\r\n        AND pkIndex.is_primary_key = 1\r\n    INNER JOIN sys.index_columns pkIndexColumn\r\n        ON pkIndexColumn.object_id = pkIndex.object_id\r\n        AND pkIndexColumn.index_id = pkIndex.index_id\r\n    INNER JOIN sys.columns pkColumn\r\n        ON pkColumn.object_id = pkIndexColumn.object_id\r\n        AND pkColumn.column_id = pkIndexColumn.column_id\r\nWHERE\r\n    s.name LIKE '[_]%'\r\n    AND t.type_desc = 'USER_TABLE'\r\n    AND clusteredIndex.index_id IS NULL\r\nGROUP BY\r\n    s.name,\r\n    t.name,\r\n    pkIndex.name\r\nHAVING\r\n    MIN(pkColumn.name) = 'ID'\r\n    AND MAX(pkColumn.name) = 'ID'\r\nORDER BY\r\n    s.name,\r\n    t.name,\r\n    pkIndex.name\r\n\r\nPRINT @sql;\r\nEXEC sp_executesql @sql;\r\n",
      "Down": null
    }
  ]
}