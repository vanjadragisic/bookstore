// <autogenerated />
namespace Bookstore
{
    #pragma warning disable // See configuration setting CommonConcepts:CompilerWarningsInGeneratedCode.

    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Linq.Expressions;
    using System.Runtime.Serialization;
    using Rhetos.Dom.DefaultConcepts;
    using Rhetos.Utilities;

    /*ModuleInfo Using Bookstore*/

    /*DataStructureInfo ClassAttributes Bookstore.AgeFrom_AgeTo_RangeFilter*/
    public class AgeFrom_AgeTo_RangeFilter/*DataStructureInfo ClassInterace Bookstore.AgeFrom_AgeTo_RangeFilter*/
    {
        /*DataStructureInfo ClassBody Bookstore.AgeFrom_AgeTo_RangeFilter*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.Book*/
    public class Book : EntityBase<Bookstore.Book>/*Next DataStructureInfo ClassInterace Bookstore.Book*/
    {
        /*PropertyInfo Attribute Bookstore.Book.Code*/
        public string Code { get; set; }
        /*PropertyInfo Attribute Bookstore.Book.NumberOfPages*/
        public int? NumberOfPages { get; set; }
        /*PropertyInfo Attribute Bookstore.Book.Title*/
        public string Title { get; set; }
        /*PropertyInfo Attribute Bookstore.Book.AuthorID*/
        public Guid? AuthorID { get; set; }
        /*DataStructureInfo ClassBody Bookstore.Book*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.BookInfo*/
    public class BookInfo : EntityBase<Bookstore.BookInfo>/*Next DataStructureInfo ClassInterace Bookstore.BookInfo*/
    {
        /*PropertyInfo Attribute Bookstore.BookInfo.NumberOfComments*/
        public int? NumberOfComments { get; set; }
        /*DataStructureInfo ClassBody Bookstore.BookInfo*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.BookTopic*/
    public class BookTopic : EntityBase<Bookstore.BookTopic>/*Next DataStructureInfo ClassInterace Bookstore.BookTopic*/
    {
        /*PropertyInfo Attribute Bookstore.BookTopic.BookID*/
        public Guid? BookID { get; set; }
        /*PropertyInfo Attribute Bookstore.BookTopic.TopicID*/
        public Guid? TopicID { get; set; }
        /*DataStructureInfo ClassBody Bookstore.BookTopic*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.ChildrensBook*/
    public class ChildrensBook : EntityBase<Bookstore.ChildrensBook>/*Next DataStructureInfo ClassInterace Bookstore.ChildrensBook*/
    {
        /*PropertyInfo Attribute Bookstore.ChildrensBook.AgeFrom*/
        public int? AgeFrom { get; set; }
        /*PropertyInfo Attribute Bookstore.ChildrensBook.AgeTo*/
        public int? AgeTo { get; set; }
        /*DataStructureInfo ClassBody Bookstore.ChildrensBook*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.Code_RegExMatchFilter*/
    public class Code_RegExMatchFilter/*DataStructureInfo ClassInterace Bookstore.Code_RegExMatchFilter*/
    {
        /*DataStructureInfo ClassBody Bookstore.Code_RegExMatchFilter*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.Comment*/
    public class Comment : EntityBase<Bookstore.Comment>/*Next DataStructureInfo ClassInterace Bookstore.Comment*/
    {
        /*PropertyInfo Attribute Bookstore.Comment.BookID*/
        public Guid? BookID { get; set; }
        /*PropertyInfo Attribute Bookstore.Comment.Text*/
        public string Text { get; set; }
        /*DataStructureInfo ClassBody Bookstore.Comment*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.CommonMisspelling*/
    public class CommonMisspelling/*DataStructureInfo ClassInterace Bookstore.CommonMisspelling*/
    {
        /*DataStructureInfo ClassBody Bookstore.CommonMisspelling*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.ComplexSearch*/
    public class ComplexSearch/*DataStructureInfo ClassInterace Bookstore.ComplexSearch*/
    {
        /*PropertyInfo Attribute Bookstore.ComplexSearch.ForeignBooksOnly*/
        public bool? ForeignBooksOnly { get; set; }
        /*PropertyInfo Attribute Bookstore.ComplexSearch.MaskTitles*/
        public bool? MaskTitles { get; set; }
        /*PropertyInfo Attribute Bookstore.ComplexSearch.MinimumPages*/
        public int? MinimumPages { get; set; }
        /*DataStructureInfo ClassBody Bookstore.ComplexSearch*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.Department*/
    public class Department : EntityBase<Bookstore.Department>/*Next DataStructureInfo ClassInterace Bookstore.Department*/
    {
        /*PropertyInfo Attribute Bookstore.Department.Code*/
        public string Code { get; set; }
        /*PropertyInfo Attribute Bookstore.Department.Description*/
        public string Description { get; set; }
        /*DataStructureInfo ClassBody Bookstore.Department*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.EducationRecord*/
    public class EducationRecord : EntityBase<Bookstore.EducationRecord>/*Next DataStructureInfo ClassInterace Bookstore.EducationRecord*/
    {
        /*PropertyInfo Attribute Bookstore.EducationRecord.Description*/
        public string Description { get; set; }
        /*PropertyInfo Attribute Bookstore.EducationRecord.RecordDate*/
        public DateTime? RecordDate { get; set; }
        /*PropertyInfo Attribute Bookstore.EducationRecord.EmployeeID*/
        public Guid? EmployeeID { get; set; }
        /*DataStructureInfo ClassBody Bookstore.EducationRecord*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.Employee*/
    public class Employee : EntityBase<Bookstore.Employee>/*Next DataStructureInfo ClassInterace Bookstore.Employee*/
    {
        /*PropertyInfo Attribute Bookstore.Employee.Code*/
        public string Code { get; set; }
        /*PropertyInfo Attribute Bookstore.Employee.FirstName*/
        public string FirstName { get; set; }
        /*PropertyInfo Attribute Bookstore.Employee.Iban*/
        public string Iban { get; set; }
        /*PropertyInfo Attribute Bookstore.Employee.IdentificationNumber*/
        public int? IdentificationNumber { get; set; }
        /*PropertyInfo Attribute Bookstore.Employee.LastName*/
        public string LastName { get; set; }
        /*PropertyInfo Attribute Bookstore.Employee.TestPeriod*/
        public int? TestPeriod { get; set; }
        /*PropertyInfo Attribute Bookstore.Employee.WorkFinished*/
        public DateTime? WorkFinished { get; set; }
        /*PropertyInfo Attribute Bookstore.Employee.WorkStarted*/
        public DateTime? WorkStarted { get; set; }
        /*DataStructureInfo ClassBody Bookstore.Employee*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.EmployeeDepartment*/
    public class EmployeeDepartment : EntityBase<Bookstore.EmployeeDepartment>/*Next DataStructureInfo ClassInterace Bookstore.EmployeeDepartment*/
    {
        /*PropertyInfo Attribute Bookstore.EmployeeDepartment.DepartmentID*/
        public Guid? DepartmentID { get; set; }
        /*PropertyInfo Attribute Bookstore.EmployeeDepartment.EmployeeID*/
        public Guid? EmployeeID { get; set; }
        /*DataStructureInfo ClassBody Bookstore.EmployeeDepartment*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.FinishBeforeStart*/
    public class FinishBeforeStart/*DataStructureInfo ClassInterace Bookstore.FinishBeforeStart*/
    {
        /*DataStructureInfo ClassBody Bookstore.FinishBeforeStart*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.ForeignAuthorXWithComments*/
    public class ForeignAuthorXWithComments/*DataStructureInfo ClassInterace Bookstore.ForeignAuthorXWithComments*/
    {
        /*DataStructureInfo ClassBody Bookstore.ForeignAuthorXWithComments*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.ForeignBook*/
    public class ForeignBook : EntityBase<Bookstore.ForeignBook>/*Next DataStructureInfo ClassInterace Bookstore.ForeignBook*/
    {
        /*PropertyInfo Attribute Bookstore.ForeignBook.OriginalLanguage*/
        public string OriginalLanguage { get; set; }
        /*PropertyInfo Attribute Bookstore.ForeignBook.TranslatorID*/
        public Guid? TranslatorID { get; set; }
        /*DataStructureInfo ClassBody Bookstore.ForeignBook*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.Genre*/
    public class Genre : EntityBase<Bookstore.Genre>/*Next DataStructureInfo ClassInterace Bookstore.Genre*/
    {
        public static readonly Guid Biography = new Guid("dabe2d94-7191-579a-8e95-f5d395aee8f7");

        public static readonly Guid ScienceFiction = new Guid("3fc47b39-fca4-0786-9d05-039834344591");

        /*PropertyInfo Attribute Bookstore.Genre.Description*/
        public string Description { get; set; }
        /*PropertyInfo Attribute Bookstore.Genre.IsFiction*/
        public bool? IsFiction { get; set; }
        /*PropertyInfo Attribute Bookstore.Genre.Label*/
        public string Label { get; set; }
        /*PropertyInfo Attribute Bookstore.Genre.Name*/
        public string Name { get; set; }
        /*DataStructureInfo ClassBody Bookstore.Genre*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.Iban_MaxLengthFilter*/
    public class Iban_MaxLengthFilter/*DataStructureInfo ClassInterace Bookstore.Iban_MaxLengthFilter*/
    {
        /*DataStructureInfo ClassBody Bookstore.Iban_MaxLengthFilter*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.Iban_MinLengthFilter*/
    public class Iban_MinLengthFilter/*DataStructureInfo ClassInterace Bookstore.Iban_MinLengthFilter*/
    {
        /*DataStructureInfo ClassBody Bookstore.Iban_MinLengthFilter*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.LongBooks*/
    public class LongBooks/*DataStructureInfo ClassInterace Bookstore.LongBooks*/
    {
        /*DataStructureInfo ClassBody Bookstore.LongBooks*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.LongBooks2*/
    public class LongBooks2/*DataStructureInfo ClassInterace Bookstore.LongBooks2*/
    {
        /*DataStructureInfo ClassBody Bookstore.LongBooks2*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.LongBooks3*/
    public class LongBooks3/*DataStructureInfo ClassInterace Bookstore.LongBooks3*/
    {
        /*PropertyInfo Attribute Bookstore.LongBooks3.ForeignBooksOnly*/
        public bool? ForeignBooksOnly { get; set; }
        /*PropertyInfo Attribute Bookstore.LongBooks3.MinimumPages*/
        public int? MinimumPages { get; set; }
        /*DataStructureInfo ClassBody Bookstore.LongBooks3*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.Manager*/
    public class Manager : EntityBase<Bookstore.Manager>/*Next DataStructureInfo ClassInterace Bookstore.Manager*/
    {
        /*PropertyInfo Attribute Bookstore.Manager.Bonuses*/
        public string Bonuses { get; set; }
        /*PropertyInfo Attribute Bookstore.Manager.EmployeeID*/
        public Guid? EmployeeID { get; set; }
        /*DataStructureInfo ClassBody Bookstore.Manager*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.Person*/
    public class Person : EntityBase<Bookstore.Person>/*Next DataStructureInfo ClassInterace Bookstore.Person*/
    {
        /*PropertyInfo Attribute Bookstore.Person.Name*/
        public string Name { get; set; }
        /*DataStructureInfo ClassBody Bookstore.Person*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.SystemRequiredBook*/
    public class SystemRequiredBook/*DataStructureInfo ClassInterace Bookstore.SystemRequiredBook*/
    {
        /*DataStructureInfo ClassBody Bookstore.SystemRequiredBook*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.SystemRequiredCode*/
    public class SystemRequiredCode/*DataStructureInfo ClassInterace Bookstore.SystemRequiredCode*/
    {
        /*DataStructureInfo ClassBody Bookstore.SystemRequiredCode*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.SystemRequiredEmployee*/
    public class SystemRequiredEmployee/*DataStructureInfo ClassInterace Bookstore.SystemRequiredEmployee*/
    {
        /*DataStructureInfo ClassBody Bookstore.SystemRequiredEmployee*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.TestPeriod_MaxValueFilter*/
    public class TestPeriod_MaxValueFilter/*DataStructureInfo ClassInterace Bookstore.TestPeriod_MaxValueFilter*/
    {
        /*DataStructureInfo ClassBody Bookstore.TestPeriod_MaxValueFilter*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.TestPeriod_MinValueFilter*/
    public class TestPeriod_MinValueFilter/*DataStructureInfo ClassInterace Bookstore.TestPeriod_MinValueFilter*/
    {
        /*DataStructureInfo ClassBody Bookstore.TestPeriod_MinValueFilter*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.Topic*/
    public class Topic : EntityBase<Bookstore.Topic>/*Next DataStructureInfo ClassInterace Bookstore.Topic*/
    {
        /*PropertyInfo Attribute Bookstore.Topic.Name*/
        public string Name { get; set; }
        /*DataStructureInfo ClassBody Bookstore.Topic*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.BookGrid*/
    public class BookGrid : EntityBase<Bookstore.BookGrid>/*Next DataStructureInfo ClassInterace Bookstore.BookGrid*/
    {
        /*PropertyInfo Attribute Bookstore.BookGrid.AuthorName*/
        public string AuthorName { get; set; }
        /*PropertyInfo Attribute Bookstore.BookGrid.Code*/
        public string Code { get; set; }
        /*PropertyInfo Attribute Bookstore.BookGrid.Title*/
        public string Title { get; set; }
        /*PropertyInfo Attribute Bookstore.BookGrid.TranslatorName*/
        public string TranslatorName { get; set; }
        /*DataStructureInfo ClassBody Bookstore.BookGrid*/
    }

    /*DataStructureInfo ClassAttributes Bookstore.PersonGrid*/
    public class PersonGrid : EntityBase<Bookstore.PersonGrid>/*Next DataStructureInfo ClassInterace Bookstore.PersonGrid*/
    {
        /*PropertyInfo Attribute Bookstore.PersonGrid.Name*/
        public string Name { get; set; }
        /*DataStructureInfo ClassBody Bookstore.PersonGrid*/
    }

    /*ModuleInfo Body Bookstore*/

    #pragma warning restore // See configuration setting CommonConcepts:CompilerWarningsInGeneratedCode.
}

namespace Common.Queryable
{
    #pragma warning disable // See configuration setting CommonConcepts:CompilerWarningsInGeneratedCode.

    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Linq.Expressions;
    using System.Runtime.Serialization;
    using Rhetos.Dom.DefaultConcepts;
    using Rhetos.Utilities;

    /*DataStructureInfo QueryableClassAttributes Bookstore.Book*/
    public class Bookstore_Book : global::Bookstore.Book, IQueryableEntity<Bookstore.Book>, System.IEquatable<Bookstore_Book>/*DataStructureInfo QueryableClassInterace Bookstore.Book*/
    {
        /*DataStructureQueryable PropertyAttribute Bookstore.Book.Extension_BookInfo*/
        public virtual Common.Queryable.Bookstore_BookInfo Extension_BookInfo { get; init; }

        /*DataStructureQueryable PropertyAttribute Bookstore.Book.Extension_ChildrensBook*/
        public virtual Common.Queryable.Bookstore_ChildrensBook Extension_ChildrensBook { get; init; }

        /*DataStructureQueryable PropertyAttribute Bookstore.Book.Extension_ForeignBook*/
        public virtual Common.Queryable.Bookstore_ForeignBook Extension_ForeignBook { get; init; }

        /*DataStructureQueryable PropertyAttribute Bookstore.Book.Author*/
        public virtual Common.Queryable.Bookstore_Person Author { get; init; }

        /*DataStructureQueryable PropertyAttribute Bookstore.Book.Extension_BookGrid*/
        public virtual Common.Queryable.Bookstore_BookGrid Extension_BookGrid { get; init; }

        /*DataStructureInfo QueryableClassMembers Bookstore.Book*/

        public bool Equals(Bookstore_Book other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.Book ToSimple()
        {
            var item = this;
            return new Bookstore.Book
            {
                ID = item.ID,
                Code = item.Code,
                NumberOfPages = item.NumberOfPages,
                Title = item.Title,
                AuthorID = item.AuthorID/*DataStructureInfo AssignSimpleProperty Bookstore.Book*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.BookInfo*/
    public class Bookstore_BookInfo : global::Bookstore.BookInfo, IQueryableEntity<Bookstore.BookInfo>, System.IEquatable<Bookstore_BookInfo>/*DataStructureInfo QueryableClassInterace Bookstore.BookInfo*/
    {
        /*DataStructureQueryable PropertyAttribute Bookstore.BookInfo.Base*/
        public virtual Common.Queryable.Bookstore_Book Base { get; init; }

        /*DataStructureInfo QueryableClassMembers Bookstore.BookInfo*/

        public bool Equals(Bookstore_BookInfo other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.BookInfo ToSimple()
        {
            var item = this;
            return new Bookstore.BookInfo
            {
                ID = item.ID,
                NumberOfComments = item.NumberOfComments/*DataStructureInfo AssignSimpleProperty Bookstore.BookInfo*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.BookTopic*/
    public class Bookstore_BookTopic : global::Bookstore.BookTopic, IQueryableEntity<Bookstore.BookTopic>, System.IEquatable<Bookstore_BookTopic>/*DataStructureInfo QueryableClassInterace Bookstore.BookTopic*/
    {
        /*DataStructureQueryable PropertyAttribute Bookstore.BookTopic.Book*/
        public virtual Common.Queryable.Bookstore_Book Book { get; init; }

        /*DataStructureQueryable PropertyAttribute Bookstore.BookTopic.Topic*/
        public virtual Common.Queryable.Bookstore_Topic Topic { get; init; }

        /*DataStructureInfo QueryableClassMembers Bookstore.BookTopic*/

        public bool Equals(Bookstore_BookTopic other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.BookTopic ToSimple()
        {
            var item = this;
            return new Bookstore.BookTopic
            {
                ID = item.ID,
                BookID = item.BookID,
                TopicID = item.TopicID/*DataStructureInfo AssignSimpleProperty Bookstore.BookTopic*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.ChildrensBook*/
    public class Bookstore_ChildrensBook : global::Bookstore.ChildrensBook, IQueryableEntity<Bookstore.ChildrensBook>, System.IEquatable<Bookstore_ChildrensBook>/*DataStructureInfo QueryableClassInterace Bookstore.ChildrensBook*/
    {
        /*DataStructureQueryable PropertyAttribute Bookstore.ChildrensBook.Base*/
        public virtual Common.Queryable.Bookstore_Book Base { get; init; }

        /*DataStructureInfo QueryableClassMembers Bookstore.ChildrensBook*/

        public bool Equals(Bookstore_ChildrensBook other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.ChildrensBook ToSimple()
        {
            var item = this;
            return new Bookstore.ChildrensBook
            {
                ID = item.ID,
                AgeFrom = item.AgeFrom,
                AgeTo = item.AgeTo/*DataStructureInfo AssignSimpleProperty Bookstore.ChildrensBook*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.Comment*/
    public class Bookstore_Comment : global::Bookstore.Comment, IQueryableEntity<Bookstore.Comment>, System.IEquatable<Bookstore_Comment>/*DataStructureInfo QueryableClassInterace Bookstore.Comment*/
    {
        /*DataStructureQueryable PropertyAttribute Bookstore.Comment.Book*/
        public virtual Common.Queryable.Bookstore_Book Book { get; init; }

        /*DataStructureInfo QueryableClassMembers Bookstore.Comment*/

        public bool Equals(Bookstore_Comment other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.Comment ToSimple()
        {
            var item = this;
            return new Bookstore.Comment
            {
                ID = item.ID,
                BookID = item.BookID,
                Text = item.Text/*DataStructureInfo AssignSimpleProperty Bookstore.Comment*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.Department*/
    public class Bookstore_Department : global::Bookstore.Department, IQueryableEntity<Bookstore.Department>, System.IEquatable<Bookstore_Department>/*DataStructureInfo QueryableClassInterace Bookstore.Department*/
    {
        /*DataStructureInfo QueryableClassMembers Bookstore.Department*/

        public bool Equals(Bookstore_Department other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.Department ToSimple()
        {
            var item = this;
            return new Bookstore.Department
            {
                ID = item.ID,
                Code = item.Code,
                Description = item.Description/*DataStructureInfo AssignSimpleProperty Bookstore.Department*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.EducationRecord*/
    public class Bookstore_EducationRecord : global::Bookstore.EducationRecord, IQueryableEntity<Bookstore.EducationRecord>, System.IEquatable<Bookstore_EducationRecord>/*DataStructureInfo QueryableClassInterace Bookstore.EducationRecord*/
    {
        /*DataStructureQueryable PropertyAttribute Bookstore.EducationRecord.Employee*/
        public virtual Common.Queryable.Bookstore_Employee Employee { get; init; }

        /*DataStructureInfo QueryableClassMembers Bookstore.EducationRecord*/

        public bool Equals(Bookstore_EducationRecord other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.EducationRecord ToSimple()
        {
            var item = this;
            return new Bookstore.EducationRecord
            {
                ID = item.ID,
                Description = item.Description,
                RecordDate = item.RecordDate,
                EmployeeID = item.EmployeeID/*DataStructureInfo AssignSimpleProperty Bookstore.EducationRecord*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.Employee*/
    public class Bookstore_Employee : global::Bookstore.Employee, IQueryableEntity<Bookstore.Employee>, System.IEquatable<Bookstore_Employee>/*DataStructureInfo QueryableClassInterace Bookstore.Employee*/
    {
        /*DataStructureQueryable PropertyAttribute Bookstore.Employee.Extension_Manager*/
        public virtual Common.Queryable.Bookstore_Manager Extension_Manager { get; init; }

        /*DataStructureInfo QueryableClassMembers Bookstore.Employee*/

        public bool Equals(Bookstore_Employee other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.Employee ToSimple()
        {
            var item = this;
            return new Bookstore.Employee
            {
                ID = item.ID,
                Code = item.Code,
                FirstName = item.FirstName,
                Iban = item.Iban,
                IdentificationNumber = item.IdentificationNumber,
                LastName = item.LastName,
                TestPeriod = item.TestPeriod,
                WorkFinished = item.WorkFinished,
                WorkStarted = item.WorkStarted/*DataStructureInfo AssignSimpleProperty Bookstore.Employee*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.EmployeeDepartment*/
    public class Bookstore_EmployeeDepartment : global::Bookstore.EmployeeDepartment, IQueryableEntity<Bookstore.EmployeeDepartment>, System.IEquatable<Bookstore_EmployeeDepartment>/*DataStructureInfo QueryableClassInterace Bookstore.EmployeeDepartment*/
    {
        /*DataStructureQueryable PropertyAttribute Bookstore.EmployeeDepartment.Department*/
        public virtual Common.Queryable.Bookstore_Department Department { get; init; }

        /*DataStructureQueryable PropertyAttribute Bookstore.EmployeeDepartment.Employee*/
        public virtual Common.Queryable.Bookstore_Employee Employee { get; init; }

        /*DataStructureInfo QueryableClassMembers Bookstore.EmployeeDepartment*/

        public bool Equals(Bookstore_EmployeeDepartment other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.EmployeeDepartment ToSimple()
        {
            var item = this;
            return new Bookstore.EmployeeDepartment
            {
                ID = item.ID,
                DepartmentID = item.DepartmentID,
                EmployeeID = item.EmployeeID/*DataStructureInfo AssignSimpleProperty Bookstore.EmployeeDepartment*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.ForeignBook*/
    public class Bookstore_ForeignBook : global::Bookstore.ForeignBook, IQueryableEntity<Bookstore.ForeignBook>, System.IEquatable<Bookstore_ForeignBook>/*DataStructureInfo QueryableClassInterace Bookstore.ForeignBook*/
    {
        /*DataStructureQueryable PropertyAttribute Bookstore.ForeignBook.Base*/
        public virtual Common.Queryable.Bookstore_Book Base { get; init; }

        /*DataStructureQueryable PropertyAttribute Bookstore.ForeignBook.Translator*/
        public virtual Common.Queryable.Bookstore_Person Translator { get; init; }

        /*DataStructureInfo QueryableClassMembers Bookstore.ForeignBook*/

        public bool Equals(Bookstore_ForeignBook other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.ForeignBook ToSimple()
        {
            var item = this;
            return new Bookstore.ForeignBook
            {
                ID = item.ID,
                OriginalLanguage = item.OriginalLanguage,
                TranslatorID = item.TranslatorID/*DataStructureInfo AssignSimpleProperty Bookstore.ForeignBook*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.Genre*/
    public class Bookstore_Genre : global::Bookstore.Genre, IQueryableEntity<Bookstore.Genre>, System.IEquatable<Bookstore_Genre>/*DataStructureInfo QueryableClassInterace Bookstore.Genre*/
    {
        /*DataStructureInfo QueryableClassMembers Bookstore.Genre*/

        public bool Equals(Bookstore_Genre other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.Genre ToSimple()
        {
            var item = this;
            return new Bookstore.Genre
            {
                ID = item.ID,
                Description = item.Description,
                IsFiction = item.IsFiction,
                Label = item.Label,
                Name = item.Name/*DataStructureInfo AssignSimpleProperty Bookstore.Genre*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.Manager*/
    public class Bookstore_Manager : global::Bookstore.Manager, IQueryableEntity<Bookstore.Manager>, System.IEquatable<Bookstore_Manager>/*DataStructureInfo QueryableClassInterace Bookstore.Manager*/
    {
        /*DataStructureQueryable PropertyAttribute Bookstore.Manager.Employee*/
        public virtual Common.Queryable.Bookstore_Employee Employee { get; init; }

        /*DataStructureQueryable PropertyAttribute Bookstore.Manager.Base*/
        public virtual Common.Queryable.Bookstore_Employee Base { get; init; }

        /*DataStructureInfo QueryableClassMembers Bookstore.Manager*/

        public bool Equals(Bookstore_Manager other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.Manager ToSimple()
        {
            var item = this;
            return new Bookstore.Manager
            {
                ID = item.ID,
                Bonuses = item.Bonuses,
                EmployeeID = item.EmployeeID/*DataStructureInfo AssignSimpleProperty Bookstore.Manager*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.Person*/
    public class Bookstore_Person : global::Bookstore.Person, IQueryableEntity<Bookstore.Person>, System.IEquatable<Bookstore_Person>/*DataStructureInfo QueryableClassInterace Bookstore.Person*/
    {
        /*DataStructureQueryable PropertyAttribute Bookstore.Person.Extension_PersonGrid*/
        public virtual Common.Queryable.Bookstore_PersonGrid Extension_PersonGrid { get; init; }

        /*DataStructureInfo QueryableClassMembers Bookstore.Person*/

        public bool Equals(Bookstore_Person other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.Person ToSimple()
        {
            var item = this;
            return new Bookstore.Person
            {
                ID = item.ID,
                Name = item.Name/*DataStructureInfo AssignSimpleProperty Bookstore.Person*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.Topic*/
    public class Bookstore_Topic : global::Bookstore.Topic, IQueryableEntity<Bookstore.Topic>, System.IEquatable<Bookstore_Topic>/*DataStructureInfo QueryableClassInterace Bookstore.Topic*/
    {
        /*DataStructureInfo QueryableClassMembers Bookstore.Topic*/

        public bool Equals(Bookstore_Topic other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.Topic ToSimple()
        {
            var item = this;
            return new Bookstore.Topic
            {
                ID = item.ID,
                Name = item.Name/*DataStructureInfo AssignSimpleProperty Bookstore.Topic*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.BookGrid*/
    public class Bookstore_BookGrid : global::Bookstore.BookGrid, IQueryableEntity<Bookstore.BookGrid>, System.IEquatable<Bookstore_BookGrid>/*DataStructureInfo QueryableClassInterace Bookstore.BookGrid*/
    {
        /*DataStructureQueryable PropertyAttribute Bookstore.BookGrid.Base*/
        public virtual Common.Queryable.Bookstore_Book Base { get; init; }

        /*DataStructureInfo QueryableClassMembers Bookstore.BookGrid*/

        public bool Equals(Bookstore_BookGrid other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.BookGrid ToSimple()
        {
            var item = this;
            return new Bookstore.BookGrid
            {
                ID = item.ID,
                AuthorName = item.AuthorName,
                Code = item.Code,
                Title = item.Title,
                TranslatorName = item.TranslatorName/*DataStructureInfo AssignSimpleProperty Bookstore.BookGrid*/
            };
        }
    }

    /*DataStructureInfo QueryableClassAttributes Bookstore.PersonGrid*/
    public class Bookstore_PersonGrid : global::Bookstore.PersonGrid, IQueryableEntity<Bookstore.PersonGrid>, System.IEquatable<Bookstore_PersonGrid>/*DataStructureInfo QueryableClassInterace Bookstore.PersonGrid*/
    {
        /*DataStructureQueryable PropertyAttribute Bookstore.PersonGrid.Base*/
        public virtual Common.Queryable.Bookstore_Person Base { get; init; }

        /*DataStructureInfo QueryableClassMembers Bookstore.PersonGrid*/

        public bool Equals(Bookstore_PersonGrid other)
        {
            return other != null && other.ID == ID;
        }

        /// <summary>Converts the object with navigation properties to a simple object with primitive properties.</summary>
        public Bookstore.PersonGrid ToSimple()
        {
            var item = this;
            return new Bookstore.PersonGrid
            {
                ID = item.ID,
                Name = item.Name/*DataStructureInfo AssignSimpleProperty Bookstore.PersonGrid*/
            };
        }
    }

    /*ModuleInfo CommonQueryableMemebers Bookstore*/

    #pragma warning restore // See configuration setting CommonConcepts:CompilerWarningsInGeneratedCode.
}
