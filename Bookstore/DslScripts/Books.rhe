Module Bookstore
{
   Entity Book
   {
      ShortString Code { AutoCode; }
      ShortString Title;
      Integer NumberOfPages;
      Reference Author Bookstore.Person;

      ItemFilter CommonMisspelling 'book => book.Title.Contains("curiousity")';
      InvalidData CommonMisspelling 'It is not allowed to enter misspelled word "curiousity".';

      Logging;
   }

    Entity Person
    {
      ShortString Name;
    }

    Entity Comment
    {
      Reference Book { Detail; }
      LongString Text;
    }

    Entity ChildrensBook
    {
        Extends Bookstore.Book;

        Integer AgeFrom;
        Integer AgeTo;
        IntegerRange AgeFrom AgeTo; // A simple validation.
    }

    Entity ForeignBook
    {
        Extends Bookstore.Book;

        ShortString OriginalLanguage;
        Reference Translator Bookstore.Person;
    }

    Entity Topic
    {
        ShortString Name { Unique; Required; }
    }

    Entity BookTopic
    {
        Reference Book { Detail; }
        Reference Topic { Required; }

        UniqueMultiple 'Book Topic';
    }

    Browse BookGrid Bookstore.Book
    {
        Take Code;
        Take Title;
        Take 'Author.Name';
        Take TranslatorName 'Extension_ForeignBook.Translator.Name';
    }

    SqlQueryable BookInfo
        "
            SELECT
                b.ID,
                NumberOfTopics = COUNT(c.ID)
            FROM
                Bookstore.Book b
                LEFT JOIN Bookstore.Comment c ON c.BookID = b.ID
            GROUP BY
                b.ID
        "
    {
        Extends Bookstore.Book;
        Integer NumberOfComments;

        AutodetectSqlDependencies;
    }

        //SqlQueryable BookTopicInfo
        //"
        //    SELECT
       //         NumberOfTopics = COUNT(b.TopicId)
        //    FROM
         //   Bookstore.BookTopic b
          //  GROUP BY
           //     b.BookId
        //"
    //{
      //  Extends Bookstore.Book;
       // Extends Bookstore.Topic;
       // Integer NumberOfTopics;

//        AutodetectSqlDependencies;
  //  }

    Browse PersonGrid Bookstore.Person
    {
        Take Name;
    }

    Hardcoded Genre
    {
        ShortString Label; // Short text displayed to user.
        LongString Description;
        Bool IsFiction;

        Entry ScienceFiction
        {
            Value Label 'Science fiction';
            Value Description 'A speculative fiction with imagined elements that are inspired by natural sciences or social sciences.';
            Value IsFiction 1;
        }

        Entry Biography
        {
            Value Label 'Biography';
            Value Description 'A written narrative of a person''s life.';
            Value IsFiction 0;
        }
    }
}

//FLAT

//Module Bookstore;
//Entity Bookstore.Book;
//ShortString Bookstore.Book.Code;
//AutoCode Bookstore.Book.Code;
//Required Bookstore.Book.Code;
//Unique Bookstore.Book.Code;
//ShortString Bookstore.Book.Title;
//Required Bookstore.Book.Title;
//Integer Bookstore.Book.NumberOfPages;
//ShortString Bookstore.Book.SomeProperty;
//ItemFilter Bookstore.Book.CommonMisspelling 'book => book.Title.Contains("curiousity")';
//InvalidData Bookstore.Book.CommonMisspelling 'It is not allowed to enter misspelled word "curiousity".';

//Logging Bookstore.Book;
//Reference Bookstore.Book Author Bookstore.Person;